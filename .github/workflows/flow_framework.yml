name: Build .Net Framework

on:
  push:
    branches: [ "master" ]

  workflow_call:

  workflow_dispatch:

env:
  SOLUTION_FILE_PATH: ./SPZipper.sln
  PACKAGE_PATH: ./SPZipper/package
  BUILD_CONFIGURATION: Release
  # TODO: move to input variables
  # PACKAGE_VERSION: '2.0.1'

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: advanced-pack
      uses: ./.github/actions/advanced_pack
      with:
        working_directory: .
        project_directory: ./SPZipper
        nuget_name: Complited_default_debug
        nuget_version: "5.0.0"
        configuration: "Debug"
        output_path: ${{ env.PACKAGE_PATH }}

    #   # -MSBuildVersion: 16.11.2.50704 might be required too
    # - name: Pack
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   # specifying name is a bit more tricky, will be done as a separate step
    #   run: nuget pack ./SPZipper -Build -IncludeReferencedProjects -Properties Configuration=Release -Symbols -OutputDirectory ${{ env.PACKAGE_PATH }} # -Version ${{ env.PACKAGE_VERSION }}

    - name: Upload nupkg artifact
      uses: actions/upload-artifact@v4
      with:
        name: legacy_nuget_artifacts
        path: ${{ env.PACKAGE_PATH }}

    # add tests and code quality gates

  publish:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Download nupkg artifact
        uses: actions/download-artifact@v4
        with:
          name: legacy_nuget_artifacts
          path: ./artifacts

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        shell: bash
        run: |
          for pkg in ./artifacts/*.symbols.nupkg; do
            echo "Publishing ${pkg}..."
            nuget push "${pkg}" -Source https://api.nuget.org/v3/index.json -ApiKey "${NUGET_API_KEY}"
          done